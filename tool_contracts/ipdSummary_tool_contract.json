{
  "_comment": "Manually specified tool contract for ipdSummary.py",
  "version": "2.2",
  "driver": {
    "exe": "ipdSummary.py --resolved-tool-contract",
    "env": {},
  },
  "tool_contract_id": "kineticsTools.ipdSummary",
  "tool_contract": {
    "input_types": [
      {
        "description": "BAM or Alignment DataSet",
        "title": "Alignment DataSet",
        "id": "dataset",
        "file_type_id": "PacBio.FileTypes.AlignmentSet"
      }
    ],
    "task_type": "pbsmrtpipe.constants.distributed_task",
    "resource_types": [],
    "nproc": 1,
    "schema_options": [
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "required": [
            "basemods.max_length"
        ],
        "type": "object",
        "properties": {
            "basemods.max_length": {
                "default": 3e12,
                "type": "integer",
                "description": "Max Sequence Length filter",
                "title": "Length filter"
            }
        },
        "title": "JSON Schema for basemods.max_length"
      },
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "required": [
            "basemods.pvalue"
        ],
        "type": "object",
        "properties": {
            "basemods.pvalue": {
                "default": 0.01,
                "type": "float",
                "description": "P-value",
                "title": "P-value"
            }
        },
        "title": "JSON Schema for basemods.pvalue"
      },
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "required": [
            "basemods.identify"
        ],
        "type": "object",
        "properties": {
          "basemods.identify": {
            "default": null,
            "type": "string",
            "description": "Modified base types to identify",
            "title": "Identify modification type"
          }
        },
        "title": "JSON Schema for basemods.identify"
      },
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "required": [
            "basemods.compute_methyl_fraction"
        ],
        "type": "object",
        "properties": {
          "basemods.compute_methyl_fraction": {
            "default": null,
            "type": "string",
            "description": "Estimate the methylated fraction in --identify mode",
            "title": "Estimate methyated fraction"
          }
        },
        "title": "JSON Schema for basemods.compute_methyl_fraction"
      }
    ],
    "output_types": [
      {
        "title": "GFF file",
        "description": "Output GFF file containing basemods",
        "default_name": "basemods.gff",
        "id": "gff",
        "file_type_id": "PacBio.FileTypes.GFF"
      },
      {
        "title": "CSV file",
        "description": "Output CSV file containing per-nucleotide data",
        "default_name": "basemods.csv",
        "id": "csv",
        "file_type_id": "PacBio.FileTypes.CSV"
      },
    ],
  }
}
